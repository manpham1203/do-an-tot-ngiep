// <auto-generated />
using System;
using BO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BO.Entities.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(3)
                        .IsUnicode(false)
                        .HasColumnType("datetime2(3)");

                    b.Property<bool>("Deleted")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("FullDescription")
                        .IsUnicode(true)
                        .HasColumnType("ntext");

                    b.Property<bool>("IsActive")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Ordinal")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(3)
                        .IsUnicode(false)
                        .HasColumnType("datetime2(3)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("BO.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(3)
                        .IsUnicode(false)
                        .HasColumnType("datetime2(3)");

                    b.Property<bool>("Deleted")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("FullDescription")
                        .IsUnicode(true)
                        .HasColumnType("ntext");

                    b.Property<bool>("IsActive")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Ordinal")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(3)
                        .IsUnicode(false)
                        .HasColumnType("datetime2(3)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BO.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(3)
                        .IsUnicode(false)
                        .HasColumnType("datetime2(3)");

                    b.Property<bool>("Deleted")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("FullDescription")
                        .IsUnicode(true)
                        .HasColumnType("ntext");

                    b.Property<bool>("IsActive")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceDiscount")
                        .HasPrecision(18, 2)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(3)
                        .IsUnicode(false)
                        .HasColumnType("datetime2(3)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BO.Entities.Product_Category_Mapping", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("char(12)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("char(12)");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product_Category_Mapping");
                });

            modelBuilder.Entity("BO.Entities.Product", b =>
                {
                    b.HasOne("BO.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("BO.Entities.Product_Category_Mapping", b =>
                {
                    b.HasOne("BO.Entities.Category", "Category")
                        .WithMany("Product_Category_Mapping")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BO.Entities.Product", "Product")
                        .WithMany("Product_Category_Mapping")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BO.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BO.Entities.Category", b =>
                {
                    b.Navigation("Product_Category_Mapping");
                });

            modelBuilder.Entity("BO.Entities.Product", b =>
                {
                    b.Navigation("Product_Category_Mapping");
                });
#pragma warning restore 612, 618
        }
    }
}
